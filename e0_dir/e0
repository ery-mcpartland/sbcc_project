BasisDirectory[e0] = StringDrop[DirectoryName[$Input], -1]
e0 /: BasisSectors[e0] := Get[StringJoin[BasisDirectory[e0], 
    "/BasisSectors[e0]"]]
e0 /: CutDs[e0] := {0, 0, 0, 0, 0, 0, 0}
e0 /: Definitions[e0] := {Hold[MetricTensor[] === d, SetDim[d]], 
   Hold[VecQ[l], Declare[l, Vector]], Hold[VecQ[r], Declare[r, Vector]], 
   Hold[VecQ[p], Declare[p, Vector]], Hold[VecQ[q], Declare[q, Vector]], 
   Hold[TypeOf[mb] === Failure["TypeError", 
      <|"MessageTemplate" -> "Cannot find a definition for `1`.", 
       "MessageParameters" -> {mb}, "Body" -> {mb}, "Stack" -> {}, 
       "Exception" -> "LookupNotFound", "Constraint" -> "Lookup[mb,v11745]", 
       "Source" -> HoldForm[mb]|>], Declare[mb, Failure["TypeError", 
      <|"MessageTemplate" -> "Cannot find a definition for `1`.", 
       "MessageParameters" -> {mb}, "Body" -> {mb}, "Stack" -> {}, 
       "Exception" -> "LookupNotFound", "Constraint" -> "Lookup[mb,v11745]", 
       "Source" -> HoldForm[mb]|>]]], 
   Hold[TypeOf[p] === Failure["TypeError", 
      <|"MessageTemplate" -> "Cannot find a definition for `1`.", 
       "MessageParameters" -> {p}, "Body" -> {p}, "Stack" -> {}, 
       "Exception" -> "LookupNotFound", "Constraint" -> "Lookup[p,v11751]", 
       "Source" -> HoldForm[p]|>], Declare[p, Failure["TypeError", 
      <|"MessageTemplate" -> "Cannot find a definition for `1`.", 
       "MessageParameters" -> {p}, "Body" -> {p}, "Stack" -> {}, 
       "Exception" -> "LookupNotFound", "Constraint" -> "Lookup[p,v11751]", 
       "Source" -> HoldForm[p]|>]]], Hold[sp[p, p] === mb^2, sp[p, p] = mb^2]}
e0 /: Ds[e0] := {-mc^2 + sp[l + q, l + q], -mc^2 + sp[l, l], 
   -mc^2 + sp[l + r, l + r], sp[r, r], -mc^2 + sp[l + q + r, l + q + r], 
   sp[l, p - q], sp[p - q, r]}
e0 /: EMs[e0] := {p, q}
e0 /: IBP[e0] := Get[StringJoin[BasisDirectory[e0], "/IBP[e0]"]]
e0 /: Information[e0] := (If[ValueQ[e0::usage], 
    Information[e0, LongForm -> False]]; 
   Print[Grid[Partition[Union[Replace[Replace[First /@ UpValues[e0] /. 
          HoldPattern -> HoldForm, 
         {HoldPattern[HoldForm[(LiteRed`Private`f$_)[e0, __]]] :> 
           HoldForm[LiteRed`Private`f$[e0, "\[Ellipsis]"]]}, {1}], 
        {HoldPattern[LiteRed`Private`x$:HoldForm[(LiteRed`Private`f$_)[e0, 
              ___]]] :> Button[LiteRed`Private`x$, 
           (SelectionMove[ButtonNotebook[], All, GeneratedCell]; 
             NotebookDelete[]; Information[Evaluate[LiteRed`Private`x$[[1,
                0]]], LongForm -> False]; Print[TableForm[Cases[UpValues[e0], 
                 HoldPattern[LiteRed`Private`a$_ :> LiteRed`Private`b$_] /; 
                  MatchQ[LiteRed`Private`a$[[1,0]], LiteRed`Private`x$[[1,
                    0]]]] /. HoldPattern -> HoldForm]]) & , 
           Appearance -> "Frameless", BaseStyle -> "InformationLink"]}, 
        {1}]], 5], DefaultBaseStyle -> "InfoGrid"]])
e0 /: jRules[e0, 0, 0, 0, 1, 1, 1, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 0, 0, 0, 1, 1, 1, 0]"]]
e0 /: jRules[e0, 0, 0, 0, 1, 1, 1, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 0, 0, 0, 1, 1, 1, 1]"]]
e0 /: jRules[e0, 0, 0, 1, 1, 0, 1, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 0, 0, 1, 1, 0, 1, 0]"]]
e0 /: jRules[e0, 0, 0, 1, 1, 0, 1, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 0, 0, 1, 1, 0, 1, 1]"]]
e0 /: jRules[e0, 0, 0, 1, 1, 1, 1, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 0, 0, 1, 1, 1, 1, 0]"]]
e0 /: jRules[e0, 0, 0, 1, 1, 1, 1, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 0, 0, 1, 1, 1, 1, 1]"]]
e0 /: jRules[e0, 0, 1, 0, 0, 1, 0, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 0, 1, 0, 0, 1, 0, 0]"]]
e0 /: jRules[e0, 0, 1, 0, 0, 1, 0, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 0, 1, 0, 0, 1, 0, 1]"]]
e0 /: jRules[e0, 0, 1, 0, 0, 1, 1, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 0, 1, 0, 0, 1, 1, 0]"]]
e0 /: jRules[e0, 0, 1, 0, 0, 1, 1, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 0, 1, 0, 0, 1, 1, 1]"]]
e0 /: jRules[e0, 0, 1, 0, 1, 1, 0, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 0, 1, 0, 1, 1, 0, 0]"]]
e0 /: jRules[e0, 0, 1, 0, 1, 1, 0, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 0, 1, 0, 1, 1, 0, 1]"]]
e0 /: jRules[e0, 0, 1, 0, 1, 1, 1, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 0, 1, 0, 1, 1, 1, 0]"]]
e0 /: jRules[e0, 0, 1, 0, 1, 1, 1, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 0, 1, 0, 1, 1, 1, 1]"]]
e0 /: jRules[e0, 0, 1, 1, 0, 0, 0, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 0, 1, 1, 0, 0, 0, 0]"]]
e0 /: jRules[e0, 0, 1, 1, 0, 0, 0, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 0, 1, 1, 0, 0, 0, 1]"]]
e0 /: jRules[e0, 0, 1, 1, 0, 0, 1, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 0, 1, 1, 0, 0, 1, 0]"]]
e0 /: jRules[e0, 0, 1, 1, 0, 0, 1, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 0, 1, 1, 0, 0, 1, 1]"]]
e0 /: jRules[e0, 0, 1, 1, 0, 1, 0, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 0, 1, 1, 0, 1, 0, 0]"]]
e0 /: jRules[e0, 0, 1, 1, 0, 1, 0, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 0, 1, 1, 0, 1, 0, 1]"]]
e0 /: jRules[e0, 0, 1, 1, 0, 1, 1, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 0, 1, 1, 0, 1, 1, 0]"]]
e0 /: jRules[e0, 0, 1, 1, 0, 1, 1, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 0, 1, 1, 0, 1, 1, 1]"]]
e0 /: jRules[e0, 0, 1, 1, 1, 0, 0, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 0, 1, 1, 1, 0, 0, 0]"]]
e0 /: jRules[e0, 0, 1, 1, 1, 0, 0, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 0, 1, 1, 1, 0, 0, 1]"]]
e0 /: jRules[e0, 0, 1, 1, 1, 0, 1, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 0, 1, 1, 1, 0, 1, 0]"]]
e0 /: jRules[e0, 0, 1, 1, 1, 0, 1, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 0, 1, 1, 1, 0, 1, 1]"]]
e0 /: jRules[e0, 0, 1, 1, 1, 1, 0, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 0, 1, 1, 1, 1, 0, 0]"]]
e0 /: jRules[e0, 0, 1, 1, 1, 1, 0, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 0, 1, 1, 1, 1, 0, 1]"]]
e0 /: jRules[e0, 0, 1, 1, 1, 1, 1, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 0, 1, 1, 1, 1, 1, 0]"]]
e0 /: jRules[e0, 0, 1, 1, 1, 1, 1, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 0, 1, 1, 1, 1, 1, 1]"]]
e0 /: jRules[e0, 1, 0, 0, 0, 1, 0, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 1, 0, 0, 0, 1, 0, 0]"]]
e0 /: jRules[e0, 1, 0, 0, 0, 1, 0, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 1, 0, 0, 0, 1, 0, 1]"]]
e0 /: jRules[e0, 1, 0, 0, 0, 1, 1, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 1, 0, 0, 0, 1, 1, 0]"]]
e0 /: jRules[e0, 1, 0, 0, 0, 1, 1, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 1, 0, 0, 0, 1, 1, 1]"]]
e0 /: jRules[e0, 1, 0, 0, 1, 1, 0, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 1, 0, 0, 1, 1, 0, 0]"]]
e0 /: jRules[e0, 1, 0, 0, 1, 1, 0, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 1, 0, 0, 1, 1, 0, 1]"]]
e0 /: jRules[e0, 1, 0, 0, 1, 1, 1, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 1, 0, 0, 1, 1, 1, 0]"]]
e0 /: jRules[e0, 1, 0, 0, 1, 1, 1, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 1, 0, 0, 1, 1, 1, 1]"]]
e0 /: jRules[e0, 1, 0, 1, 0, 0, 0, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 1, 0, 1, 0, 0, 0, 0]"]]
e0 /: jRules[e0, 1, 0, 1, 0, 0, 0, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 1, 0, 1, 0, 0, 0, 1]"]]
e0 /: jRules[e0, 1, 0, 1, 0, 0, 1, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 1, 0, 1, 0, 0, 1, 0]"]]
e0 /: jRules[e0, 1, 0, 1, 0, 0, 1, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 1, 0, 1, 0, 0, 1, 1]"]]
e0 /: jRules[e0, 1, 0, 1, 0, 1, 0, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 1, 0, 1, 0, 1, 0, 0]"]]
e0 /: jRules[e0, 1, 0, 1, 0, 1, 0, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 1, 0, 1, 0, 1, 0, 1]"]]
e0 /: jRules[e0, 1, 0, 1, 0, 1, 1, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 1, 0, 1, 0, 1, 1, 0]"]]
e0 /: jRules[e0, 1, 0, 1, 0, 1, 1, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 1, 0, 1, 0, 1, 1, 1]"]]
e0 /: jRules[e0, 1, 0, 1, 1, 0, 0, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 1, 0, 1, 1, 0, 0, 0]"]]
e0 /: jRules[e0, 1, 0, 1, 1, 0, 0, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 1, 0, 1, 1, 0, 0, 1]"]]
e0 /: jRules[e0, 1, 0, 1, 1, 0, 1, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 1, 0, 1, 1, 0, 1, 0]"]]
e0 /: jRules[e0, 1, 0, 1, 1, 0, 1, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 1, 0, 1, 1, 0, 1, 1]"]]
e0 /: jRules[e0, 1, 0, 1, 1, 1, 0, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 1, 0, 1, 1, 1, 0, 0]"]]
e0 /: jRules[e0, 1, 0, 1, 1, 1, 0, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 1, 0, 1, 1, 1, 0, 1]"]]
e0 /: jRules[e0, 1, 0, 1, 1, 1, 1, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 1, 0, 1, 1, 1, 1, 0]"]]
e0 /: jRules[e0, 1, 0, 1, 1, 1, 1, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 1, 0, 1, 1, 1, 1, 1]"]]
e0 /: jRules[e0, 1, 1, 0, 0, 1, 0, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 1, 1, 0, 0, 1, 0, 0]"]]
e0 /: jRules[e0, 1, 1, 0, 0, 1, 0, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 1, 1, 0, 0, 1, 0, 1]"]]
e0 /: jRules[e0, 1, 1, 0, 0, 1, 1, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 1, 1, 0, 0, 1, 1, 0]"]]
e0 /: jRules[e0, 1, 1, 0, 0, 1, 1, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 1, 1, 0, 0, 1, 1, 1]"]]
e0 /: jRules[e0, 1, 1, 0, 1, 1, 0, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 1, 1, 0, 1, 1, 0, 0]"]]
e0 /: jRules[e0, 1, 1, 0, 1, 1, 0, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 1, 1, 0, 1, 1, 0, 1]"]]
e0 /: jRules[e0, 1, 1, 0, 1, 1, 1, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 1, 1, 0, 1, 1, 1, 0]"]]
e0 /: jRules[e0, 1, 1, 0, 1, 1, 1, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 1, 1, 0, 1, 1, 1, 1]"]]
e0 /: jRules[e0, 1, 1, 1, 0, 0, 0, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 1, 1, 1, 0, 0, 0, 0]"]]
e0 /: jRules[e0, 1, 1, 1, 0, 0, 0, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 1, 1, 1, 0, 0, 0, 1]"]]
e0 /: jRules[e0, 1, 1, 1, 0, 0, 1, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 1, 1, 1, 0, 0, 1, 0]"]]
e0 /: jRules[e0, 1, 1, 1, 0, 0, 1, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 1, 1, 1, 0, 0, 1, 1]"]]
e0 /: jRules[e0, 1, 1, 1, 0, 1, 0, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 1, 1, 1, 0, 1, 0, 0]"]]
e0 /: jRules[e0, 1, 1, 1, 0, 1, 0, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 1, 1, 1, 0, 1, 0, 1]"]]
e0 /: jRules[e0, 1, 1, 1, 0, 1, 1, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 1, 1, 1, 0, 1, 1, 0]"]]
e0 /: jRules[e0, 1, 1, 1, 0, 1, 1, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 1, 1, 1, 0, 1, 1, 1]"]]
e0 /: jRules[e0, 1, 1, 1, 1, 0, 0, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 1, 1, 1, 1, 0, 0, 0]"]]
e0 /: jRules[e0, 1, 1, 1, 1, 0, 0, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 1, 1, 1, 1, 0, 0, 1]"]]
e0 /: jRules[e0, 1, 1, 1, 1, 0, 1, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 1, 1, 1, 1, 0, 1, 0]"]]
e0 /: jRules[e0, 1, 1, 1, 1, 0, 1, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 1, 1, 1, 1, 0, 1, 1]"]]
e0 /: jRules[e0, 1, 1, 1, 1, 1, 0, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 1, 1, 1, 1, 1, 0, 0]"]]
e0 /: jRules[e0, 1, 1, 1, 1, 1, 0, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 1, 1, 1, 1, 1, 0, 1]"]]
e0 /: jRules[e0, 1, 1, 1, 1, 1, 1, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 1, 1, 1, 1, 1, 1, 0]"]]
e0 /: jRules[e0, 1, 1, 1, 1, 1, 1, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jRules[e0, 1, 1, 1, 1, 1, 1, 1]"]]
e0 /: jSymmetries[e0, 0, 0, 0, 1, 1, 1, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jSymmetries[e0, 0, 0, 0, 1, 1, 1, 0]"]]
e0 /: jSymmetries[e0, 0, 0, 0, 1, 1, 1, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jSymmetries[e0, 0, 0, 0, 1, 1, 1, 1]"]]
e0 /: jSymmetries[e0, 0, 0, 1, 1, 0, 1, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jSymmetries[e0, 0, 0, 1, 1, 0, 1, 0]"]]
e0 /: jSymmetries[e0, 0, 0, 1, 1, 0, 1, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jSymmetries[e0, 0, 0, 1, 1, 0, 1, 1]"]]
e0 /: jSymmetries[e0, 0, 0, 1, 1, 1, 1, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jSymmetries[e0, 0, 0, 1, 1, 1, 1, 0]"]]
e0 /: jSymmetries[e0, 0, 0, 1, 1, 1, 1, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jSymmetries[e0, 0, 0, 1, 1, 1, 1, 1]"]]
e0 /: jSymmetries[e0, 0, 1, 0, 0, 1, 0, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jSymmetries[e0, 0, 1, 0, 0, 1, 0, 0]"]]
e0 /: jSymmetries[e0, 0, 1, 0, 0, 1, 0, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jSymmetries[e0, 0, 1, 0, 0, 1, 0, 1]"]]
e0 /: jSymmetries[e0, 0, 1, 0, 0, 1, 1, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jSymmetries[e0, 0, 1, 0, 0, 1, 1, 0]"]]
e0 /: jSymmetries[e0, 0, 1, 0, 0, 1, 1, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jSymmetries[e0, 0, 1, 0, 0, 1, 1, 1]"]]
e0 /: jSymmetries[e0, 0, 1, 0, 1, 1, 0, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jSymmetries[e0, 0, 1, 0, 1, 1, 0, 0]"]]
e0 /: jSymmetries[e0, 0, 1, 0, 1, 1, 0, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jSymmetries[e0, 0, 1, 0, 1, 1, 0, 1]"]]
e0 /: jSymmetries[e0, 0, 1, 0, 1, 1, 1, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jSymmetries[e0, 0, 1, 0, 1, 1, 1, 0]"]]
e0 /: jSymmetries[e0, 0, 1, 0, 1, 1, 1, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jSymmetries[e0, 0, 1, 0, 1, 1, 1, 1]"]]
e0 /: jSymmetries[e0, 0, 1, 1, 0, 0, 0, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jSymmetries[e0, 0, 1, 1, 0, 0, 0, 1]"]]
e0 /: jSymmetries[e0, 0, 1, 1, 0, 0, 1, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jSymmetries[e0, 0, 1, 1, 0, 0, 1, 1]"]]
e0 /: jSymmetries[e0, 0, 1, 1, 0, 1, 0, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jSymmetries[e0, 0, 1, 1, 0, 1, 0, 0]"]]
e0 /: jSymmetries[e0, 0, 1, 1, 0, 1, 0, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jSymmetries[e0, 0, 1, 1, 0, 1, 0, 1]"]]
e0 /: jSymmetries[e0, 0, 1, 1, 0, 1, 1, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jSymmetries[e0, 0, 1, 1, 0, 1, 1, 0]"]]
e0 /: jSymmetries[e0, 0, 1, 1, 0, 1, 1, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jSymmetries[e0, 0, 1, 1, 0, 1, 1, 1]"]]
e0 /: jSymmetries[e0, 0, 1, 1, 1, 0, 0, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jSymmetries[e0, 0, 1, 1, 1, 0, 0, 0]"]]
e0 /: jSymmetries[e0, 0, 1, 1, 1, 0, 0, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jSymmetries[e0, 0, 1, 1, 1, 0, 0, 1]"]]
e0 /: jSymmetries[e0, 0, 1, 1, 1, 0, 1, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jSymmetries[e0, 0, 1, 1, 1, 0, 1, 0]"]]
e0 /: jSymmetries[e0, 0, 1, 1, 1, 0, 1, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jSymmetries[e0, 0, 1, 1, 1, 0, 1, 1]"]]
e0 /: jSymmetries[e0, 0, 1, 1, 1, 1, 0, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jSymmetries[e0, 0, 1, 1, 1, 1, 0, 0]"]]
e0 /: jSymmetries[e0, 0, 1, 1, 1, 1, 0, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jSymmetries[e0, 0, 1, 1, 1, 1, 0, 1]"]]
e0 /: jSymmetries[e0, 0, 1, 1, 1, 1, 1, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jSymmetries[e0, 0, 1, 1, 1, 1, 1, 0]"]]
e0 /: jSymmetries[e0, 0, 1, 1, 1, 1, 1, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jSymmetries[e0, 0, 1, 1, 1, 1, 1, 1]"]]
e0 /: jSymmetries[e0, 1, 0, 0, 0, 1, 1, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jSymmetries[e0, 1, 0, 0, 0, 1, 1, 0]"]]
e0 /: jSymmetries[e0, 1, 0, 0, 0, 1, 1, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jSymmetries[e0, 1, 0, 0, 0, 1, 1, 1]"]]
e0 /: jSymmetries[e0, 1, 0, 0, 1, 1, 1, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jSymmetries[e0, 1, 0, 0, 1, 1, 1, 0]"]]
e0 /: jSymmetries[e0, 1, 0, 0, 1, 1, 1, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jSymmetries[e0, 1, 0, 0, 1, 1, 1, 1]"]]
e0 /: jSymmetries[e0, 1, 0, 1, 0, 0, 0, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jSymmetries[e0, 1, 0, 1, 0, 0, 0, 1]"]]
e0 /: jSymmetries[e0, 1, 0, 1, 0, 0, 1, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jSymmetries[e0, 1, 0, 1, 0, 0, 1, 1]"]]
e0 /: jSymmetries[e0, 1, 0, 1, 0, 1, 0, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jSymmetries[e0, 1, 0, 1, 0, 1, 0, 1]"]]
e0 /: jSymmetries[e0, 1, 0, 1, 0, 1, 1, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jSymmetries[e0, 1, 0, 1, 0, 1, 1, 0]"]]
e0 /: jSymmetries[e0, 1, 0, 1, 0, 1, 1, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jSymmetries[e0, 1, 0, 1, 0, 1, 1, 1]"]]
e0 /: jSymmetries[e0, 1, 0, 1, 1, 0, 0, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jSymmetries[e0, 1, 0, 1, 1, 0, 0, 1]"]]
e0 /: jSymmetries[e0, 1, 0, 1, 1, 0, 1, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jSymmetries[e0, 1, 0, 1, 1, 0, 1, 0]"]]
e0 /: jSymmetries[e0, 1, 0, 1, 1, 0, 1, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jSymmetries[e0, 1, 0, 1, 1, 0, 1, 1]"]]
e0 /: jSymmetries[e0, 1, 0, 1, 1, 1, 0, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jSymmetries[e0, 1, 0, 1, 1, 1, 0, 1]"]]
e0 /: jSymmetries[e0, 1, 0, 1, 1, 1, 1, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jSymmetries[e0, 1, 0, 1, 1, 1, 1, 0]"]]
e0 /: jSymmetries[e0, 1, 0, 1, 1, 1, 1, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jSymmetries[e0, 1, 0, 1, 1, 1, 1, 1]"]]
e0 /: jSymmetries[e0, 1, 1, 0, 0, 1, 1, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jSymmetries[e0, 1, 1, 0, 0, 1, 1, 0]"]]
e0 /: jSymmetries[e0, 1, 1, 0, 0, 1, 1, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jSymmetries[e0, 1, 1, 0, 0, 1, 1, 1]"]]
e0 /: jSymmetries[e0, 1, 1, 0, 1, 1, 1, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jSymmetries[e0, 1, 1, 0, 1, 1, 1, 0]"]]
e0 /: jSymmetries[e0, 1, 1, 0, 1, 1, 1, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jSymmetries[e0, 1, 1, 0, 1, 1, 1, 1]"]]
e0 /: jSymmetries[e0, 1, 1, 1, 0, 0, 1, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jSymmetries[e0, 1, 1, 1, 0, 0, 1, 1]"]]
e0 /: jSymmetries[e0, 1, 1, 1, 0, 1, 0, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jSymmetries[e0, 1, 1, 1, 0, 1, 0, 0]"]]
e0 /: jSymmetries[e0, 1, 1, 1, 0, 1, 0, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jSymmetries[e0, 1, 1, 1, 0, 1, 0, 1]"]]
e0 /: jSymmetries[e0, 1, 1, 1, 0, 1, 1, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jSymmetries[e0, 1, 1, 1, 0, 1, 1, 0]"]]
e0 /: jSymmetries[e0, 1, 1, 1, 0, 1, 1, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jSymmetries[e0, 1, 1, 1, 0, 1, 1, 1]"]]
e0 /: jSymmetries[e0, 1, 1, 1, 1, 0, 1, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jSymmetries[e0, 1, 1, 1, 1, 0, 1, 0]"]]
e0 /: jSymmetries[e0, 1, 1, 1, 1, 0, 1, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jSymmetries[e0, 1, 1, 1, 1, 0, 1, 1]"]]
e0 /: jSymmetries[e0, 1, 1, 1, 1, 1, 0, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jSymmetries[e0, 1, 1, 1, 1, 1, 0, 0]"]]
e0 /: jSymmetries[e0, 1, 1, 1, 1, 1, 0, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jSymmetries[e0, 1, 1, 1, 1, 1, 0, 1]"]]
e0 /: jSymmetries[e0, 1, 1, 1, 1, 1, 1, 0] := 
  Get[StringJoin[BasisDirectory[e0], "/jSymmetries[e0, 1, 1, 1, 1, 1, 1, 0]"]]
e0 /: jSymmetries[e0, 1, 1, 1, 1, 1, 1, 1] := 
  Get[StringJoin[BasisDirectory[e0], "/jSymmetries[e0, 1, 1, 1, 1, 1, 1, 1]"]]
e0 /: LI[e0] := Get[StringJoin[BasisDirectory[e0], "/LI[e0]"]]
e0 /: LMs[e0] := {l, r}
e0 /: MappedSectors[e0] := Get[StringJoin[BasisDirectory[e0], 
    "/MappedSectors[e0]"]]
e0 /: MIs[e0] := {j[e0, 0, 1, 0, 0, 1, 0, 0], j[e0, 0, 0, 0, 1, 1, 1, 0], 
   j[e0, 0, 0, 1, 1, 0, 1, 0], j[e0, 0, 1, 0, 0, 1, 0, 1], 
   j[e0, 0, 1, 0, 0, 1, 1, 0], j[e0, 0, 1, 0, 1, 1, 0, 0], 
   j[e0, 0, 1, 1, 0, 0, 0, 1], j[e0, 0, 1, 1, 0, 1, 0, 0], 
   j[e0, 1, 0, 0, 0, 1, 1, 0], j[e0, 1, 0, 1, 0, 0, 0, 1], 
   j[e0, 0, 0, 0, 2, 1, 1, 0], j[e0, 0, 0, 1, 1, 0, 2, 0], 
   j[e0, 0, 2, 0, 0, 1, 0, 1], j[e0, 0, 2, 0, 1, 1, 0, 0], 
   j[e0, 2, 0, 1, 0, 0, 0, 1], j[e0, 0, 0, 1, 1, 1, 1, 0], 
   j[e0, 0, 1, 0, 0, 1, 1, 1], j[e0, 0, 1, 0, 1, 1, 0, 1], 
   j[e0, 0, 1, 0, 1, 1, 1, 0], j[e0, 0, 1, 1, 0, 0, 1, 1], 
   j[e0, 0, 1, 1, 0, 1, 0, 1], j[e0, 0, 1, 1, 0, 1, 1, 0], 
   j[e0, 1, 0, 0, 0, 1, 1, 1], j[e0, 1, 0, 1, 0, 0, 1, 1], 
   j[e0, 1, 0, 1, 0, 1, 0, 1], j[e0, 1, 0, 1, 0, 1, 1, 0], 
   j[e0, 1, 0, 1, 1, 0, 0, 1], j[e0, 1, 0, 1, 1, 0, 1, 0], 
   j[e0, 1, 1, 0, 0, 1, 1, 0], j[e0, 1, 1, 1, 0, 1, 0, 0], 
   j[e0, 0, 0, 2, 1, 1, 1, 0], j[e0, 0, 2, 0, 1, 1, 0, 1], 
   j[e0, 0, 2, 0, 1, 1, 1, 0], j[e0, 0, 1, 0, 2, 1, 1, 0], 
   j[e0, 0, 2, 1, 0, 1, 0, 1], j[e0, 0, 1, 2, 0, 1, 0, 1], 
   j[e0, 2, 0, 1, 0, 1, 0, 1], j[e0, 1, 0, 2, 0, 1, 0, 1], 
   j[e0, 2, 0, 1, 1, 0, 0, 1], j[e0, 2, 0, 1, 1, 0, 1, 0], 
   j[e0, 1, 0, 2, 1, 0, 1, 0], j[e0, 0, 1, 0, 1, 1, 1, 1], 
   j[e0, 0, 1, 1, 0, 1, 1, 1], j[e0, 0, 1, 1, 1, 1, 1, 0], 
   j[e0, 1, 0, 1, 0, 1, 1, 1], j[e0, 1, 0, 1, 1, 0, 1, 1], 
   j[e0, 1, 0, 1, 1, 1, 1, 0], j[e0, 1, 1, 0, 0, 1, 1, 1], 
   j[e0, 1, 1, 1, 0, 0, 1, 1], j[e0, 1, 1, 1, 0, 1, 0, 1], 
   j[e0, 1, 1, 1, 0, 1, 1, 0], j[e0, 0, 2, 0, 1, 1, 1, 1], 
   j[e0, 0, 1, 0, 2, 1, 1, 1], j[e0, 0, 1, 2, 1, 1, 1, 0], 
   j[e0, 0, 1, 1, 2, 1, 1, 0], j[e0, 0, 1, 1, 1, 1, 2, 0], 
   j[e0, 2, 0, 1, 1, 0, 1, 1], j[e0, 1, 0, 2, 1, 0, 1, 1], 
   j[e0, 2, 0, 1, 1, 1, 1, 0], j[e0, 1, 0, 2, 1, 1, 1, 0], 
   j[e0, 1, 0, 1, 2, 1, 1, 0], j[e0, 1, 1, 1, 0, 1, 1, 1]}
e0 /: NonZeroSectors[e0] := Get[StringJoin[BasisDirectory[e0], 
    "/NonZeroSectors[e0]"]]
e0 /: SimpleSectors[e0] := Get[StringJoin[BasisDirectory[e0], 
    "/SimpleSectors[e0]"]]
e0 /: SPs[e0] := {sp[l, l], sp[l, p], sp[l, q], sp[l, r], sp[p, r], sp[q, r], 
   sp[r, r]}
e0 /: SR[e0] := Get[StringJoin[BasisDirectory[e0], "/SR[e0]"]]
e0 /: Toj[e0] := {sp[l, l] -> mc^2 + j[e0, 0, -1, 0, 0, 0, 0, 0], 
   sp[l, p] -> (j[e0, -1, 0, 0, 0, 0, 0, 0] - j[e0, 0, -1, 0, 0, 0, 0, 0] + 
      2*j[e0, 0, 0, 0, 0, 0, -1, 0] - sp[q, q])/2, 
   sp[l, q] -> (j[e0, -1, 0, 0, 0, 0, 0, 0] - j[e0, 0, -1, 0, 0, 0, 0, 0] - 
      sp[q, q])/2, sp[l, r] -> (-j[e0, 0, -1, 0, 0, 0, 0, 0] + 
      j[e0, 0, 0, -1, 0, 0, 0, 0] - j[e0, 0, 0, 0, -1, 0, 0, 0])/2, 
   sp[p, r] -> (-j[e0, -1, 0, 0, 0, 0, 0, 0] + j[e0, 0, -1, 0, 0, 0, 0, 0] - 
      j[e0, 0, 0, -1, 0, 0, 0, 0] + j[e0, 0, 0, 0, 0, -1, 0, 0] + 
      2*j[e0, 0, 0, 0, 0, 0, 0, -1])/2, 
   sp[q, r] -> (-j[e0, -1, 0, 0, 0, 0, 0, 0] + j[e0, 0, -1, 0, 0, 0, 0, 0] - 
      j[e0, 0, 0, -1, 0, 0, 0, 0] + j[e0, 0, 0, 0, 0, -1, 0, 0])/2, 
   sp[r, r] -> j[e0, 0, 0, 0, -1, 0, 0, 0]}
e0 /: UniqueSectors[e0] := Get[StringJoin[BasisDirectory[e0], 
    "/UniqueSectors[e0]"]]
e0 /: ZerojRule[e0] := LiteRed`Private`jjj:j[e0, __] :> 
   0 /; Module[{LiteRed`Private`jjs = 
       Rest[List @@ jSector[LiteRed`Private`jjj]]}, 
     Or @@ (BitOr[LiteRed`Private`jjs, #1] === #1 & ) /@ 
       {{1, 1, 0, 1, 0, 1, 1}, {0, 0, 1, 0, 1, 1, 1}, {0, 0, 1, 1, 1, 0, 1}}]
e0 /: ZeroSectors[e0] := Get[StringJoin[BasisDirectory[e0], 
    "/ZeroSectors[e0]"]]
e0::usage = "2-loop basis with 2 external momenta.\nUse Information[e0] to \
get basis summary.\nThis string can be redefined by setting \
e0::usage=\"\[Ellipsis]\""; Information[e0, LongForm -> False]; 
LiteRed`Private`CheckDefs[e0]
BasisDirectory[e0]
